# Stage 1: Build stage for GCC and Python
FROM ubuntu:22.04 as build-tools

# Set environment variables to suppress interactive mode
ENV DEBIAN_FRONTEND=noninteractive

# Install necessary build dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    libssl-dev \
    wget

# Download and build GCC (example version, replace with specific version if needed)
RUN wget https://ftp.gnu.org/gnu/gcc/gcc-12.1.0/gcc-12.1.0.tar.gz \
    && tar -xf gcc-12.1.0.tar.gz \
    && cd gcc-12.1.0 \
    && ./configure --disable-multilib --enable-languages=c,c++ \
    && make -j$(nproc) \
    && make install \
    && cd .. \
    && rm -rf gcc-12.1.0 gcc-12.1.0.tar.gz

# Download and build Python
RUN wget https://www.python.org/ftp/python/3.9.13/Python-3.9.13.tgz \
    && tar -xzf Python-3.9.13.tgz \
    && cd Python-3.9.13 \
    && ./configure --enable-optimizations \
    && make -j$(nproc) \
    && make install \
    && cd .. \
    && rm -rf Python-3.9.13 Python-3.9.13.tgz

# Stage 2: Setup the clean environment with tools installed
FROM ubuntu:22.04

# Copy built GCC and Python from previous stages
COPY --from=build-tools /usr/local /usr/local

# Set noninteractive environment variable
ENV DEBIAN_FRONTEND=noninteractive

# Install additional dependencies and tools
RUN apt-get update && apt-get install -y \
    software-properties-common \
    git \
    cmake \
    python3-pip \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Set the default versions of GCC and Python
RUN update-alternatives --install /usr/bin/gcc gcc /usr/local/bin/gcc 12 \
    && update-alternatives --install /usr/bin/g++ g++ /usr/local/bin/g++ 12 \
    && update-alternatives --install /usr/bin/python3 python3 /usr/local/bin/python3.9 1

# Set up a working directory for your application
WORKDIR /app

# Default command to keep the container running
CMD ["bash"]